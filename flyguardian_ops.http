# Use este arquivo com a extensao REST Client (Huachao Mao). Mantenha o servidor ativo, defina @accessToken e clique em "Send Request" sobre cada bloco.

@base = http://localhost:4000
@accessToken = PREENCHA_SEU_TOKEN_AQUI

### Health
GET {{base}}/health
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Drones - Create (POST /drones)
# @name createDrone
POST {{base}}/drones
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "name": "Falcon X1",
  "serial": "FG-DRN-1001",
  "model": "Matrice 300 RTK",
  "manufacturer": "DJI",
  "tenantId": "tenant-alpha",
  "maxFlightMinutes": 45,
  "maxPayloadKg": 2.7,
  "status": "active"
}

> {%
  const data = JSON.parse(response.body || '{}');
  const id = data.id || data.drone?.id || data._id;
  if (id) {
    client.global.set('droneId', id);
    client.log(`droneId=${id}`);
  }
%}

### Drones - List (GET /drones)
# @name listDrones
GET {{base}}/drones
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Drones - Retrieve (GET /drones/:id)
# @name getDrone
GET {{base}}/drones/{{droneId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Drones - Update (PATCH /drones/:id)
# @name updateDrone
PATCH {{base}}/drones/{{droneId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "maintenance",
  "nickname": "Falcon X1 Oeste"
}

### Drones - Delete (DELETE /drones/:id)
# @name deleteDrone
DELETE {{base}}/drones/{{droneId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Missions - Create (POST /missions)
# @name createMission
POST {{base}}/missions
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "name": "Perimetro Oeste - Turno Noite",
  "droneId": "{{droneId}}",
  "tenantId": "tenant-alpha",
  "mode": "grid",
  "status": "draft",
  "areaHectares": 12.5,
  "estimatedFlightMinutes": 28,
  "returnHomeAltitude": 120,
  "waypoints": [
    { "lat": -23.5503, "lng": -46.6330, "alt": 110 },
    { "lat": -23.5498, "lng": -46.6315, "alt": 112 },
    { "lat": -23.5512, "lng": -46.6307, "alt": 115 },
    { "lat": -23.5520, "lng": -46.6324, "alt": 108 }
  ],
  "checklist": {
    "battery": "ok",
    "link": "ok",
    "failsafe": "ok"
  }
}

> {%
  const data = JSON.parse(response.body || '{}');
  const id = data.id || data.mission?.id || data._id;
  if (id) {
    client.global.set('missionId', id);
    client.log(`missionId=${id}`);
  }
%}

### Missions - List (GET /missions)
# @name listMissions
GET {{base}}/missions
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Missions - Retrieve (GET /missions/:id)
# @name getMission
GET {{base}}/missions/{{missionId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Missions - Update Status (PATCH /missions/:id/status)
# @name updateMissionStatus
PATCH {{base}}/missions/{{missionId}}/status
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "approved",
  "approvedBy": "cco.marcos",
  "notes": "Trajeto revisado e autorizado para 20h00 UTC."
}

### FlightHistory - Create (POST /flight-history)
# @name createFlightHistory
POST {{base}}/flight-history
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "missionId": "{{missionId}}",
  "droneId": "{{droneId}}",
  "tenantId": "tenant-alpha",
  "status": "completed",
  "startedAt": "2025-01-10T23:00:00Z",
  "endedAt": "2025-01-10T23:32:00Z",
  "distanceKm": 6.4,
  "maxAltitudeMeters": 118,
  "windGustKts": 12,
  "operator": "operador.lima",
  "telemetry": [
    { "timestamp": "2025-01-10T23:05:00Z", "lat": -23.5501, "lng": -46.6327, "alt": 112 },
    { "timestamp": "2025-01-10T23:12:00Z", "lat": -23.5514, "lng": -46.6319, "alt": 115 }
  ],
  "media": [
    { "type": "photo", "url": "https://media.flyguardian.local/missions/{{missionId}}/photo-01.jpg" }
  ],
  "notes": "Nenhuma ocorrencia relevada."
}

### FlightHistory - List by mission (GET /flight-history)
# @name listFlightHistory
GET {{base}}/flight-history?missionId={{missionId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}
